version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects,
# enabling you to create encapsulated, parameterized commands, jobs, and executors that can
# be used across multiple projects.
# Learn more about orbs: https://circleci.com/orbs/
orbs:
  node: circleci/node@4.7

# Yaml References enable us to DRY out our config by sharing variables across multiple jobs.
# In this case, we are commonly using the "workspaces" feature to share
# build artifacts and files across jobs. For example, we build the Next.js app
# is persisted to a workspace to be made available when App Engine deploys.
references:
  workspace_root: &workspace_root
    /tmp/workspace
  attach_workspace: &attach_workspace
    at: *workspace_root

workflows:
  Nexus:
    jobs:
      - node/test:
          name: Test
          version: "16.13.0"
      - build:
          name: Build
          filters:
            branches:
              only:
                dev
          requires:
            - Test
      - deploy:
          name: Deploy
          filters:
            branches:
              only:
                dev
          requires:
            - Deploy

jobs:
  build:
    docker:
      - image: cimg/node:16.13.0
    steps:
      - *attach_workspace
      - checkout
      - node/install-packages
      - restore_cache:
          keys:
            - v1-next-cache-{{ arch }}-{{ .Branch }}
            - v1-next-cache
      - run:
          name: Next.js build
          command: npm run build
      - save_cache: 
          key: v1-next-cache-{{ arch }}-{{ .Branch }}
          paths: 
            - .next/cache
      - run:
          name: Move built files to workspace
          command: |
              set -exu
              mkdir -p /tmp/workspace/.next
              mkdir -p /tmp/workspace/public
              mv .next/* /tmp/workspace/.next/
              mv public/* /tmp/workspace/public/
              mv app.yaml /tmp/workspace/app.yaml
              mv package.json /tmp/workspace/package.json
              mv package-lock.json /tmp/workspace/package-lock.json
              mv server.js /tmp/workspace/server.js
              mv next.config.js /tmp/workspace/next.config.js
      - run:
          name: Compress workspace to build artifact
          command: |
            tar -zcvf nexus.${CIRCLE_BRANCH}.${CIRCLE_SHA1}.tar.gz /tmp/workspace
      - store_artifacts:
            path: nexus.${CIRCLE_BRANCH}.${CIRCLE_SHA1}.tar.gz
            destination: /tmp/workspace
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - /tmp/workspace/*

  deploy:
    docker:
      - image: google/cloud-sdk:alpine
    working_directory: *workspace_root
    steps:
      - *attach_workspace
      - run:
          name: Check Google Cloud SDK version
          command: gcloud version
      - run:
          name: Configure and authorize Google Cloud SDK configuration
          command: |
            # Create service account key file
            set -exu
            echo $GCLOUD_SERVICE_KEY | base64 --decode > ${HOME}/gcloud-service-key.json

            # Initialize gcloud CLI
            gcloud --quiet config set component_manager/disable_update_check true
            gcloud --quiet config set core/disable_usage_reporting true
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project $GOOGLE_PROJECT_ID

            if [[ -n $GOOGLE_COMPUTE_ZONE ]]; then
              gcloud --quiet config set compute/zone $GOOGLE_COMPUTE_ZONE
            fi

            if [[ -n $GOOGLE_COMPUTE_REGION ]]; then
              gcloud --quiet config set compute/region $GOOGLE_COMPUTE_REGION
            fi
      - run:
          name: Describe Google App Engine project
          command: gcloud app describe
      - run:
          name: Deploy to Google App Engine
          command: gcloud --quiet app deploy app.yaml
